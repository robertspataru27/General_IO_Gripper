CS.UnityEngine.Debug.Log('ToolUI-> Gripper OnFinishEdited triggered')
local thisTool = CS.ToolManagerLuaInterface
local Instance = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance
local PTable = Instance.parameterTable
local UiElement = Instance.uiElementOnEdit
local UiElementType = Instance.typeOfUiElementOnEdit

-- Verify PTable is setup
PTable:set_Item('Vender', 'Mantis Robotics Inc')
local ui_name = UiElement.name or "Unknown"
local tag_name = UiElementType .. '_' .. ui_name .. '_values'
CS.UnityEngine.Debug.Log(ui_name)
CS.UnityEngine.Debug.Log(tag_name)

-- Get DO and DI counts
local doCount = Instance:GetUiElementByName("DoCountSelection").value
local diCount = Instance:GetUiElementByName("DiCountSelection").value

-- Get list elements
local closeDOList = Instance:GetUiElementByName("CloseGripperDOSelection").value
local openDOList = Instance:GetUiElementByName("OpenGripperDOSelection").value
local feedbackDIList = Instance:GetUiElementByName("FeedbackDISelection").value

-- Create lists to hold values
local Robot_DO_Close_N_UI = {}
local Robot_DO_Close_V_UI = {}
local Robot_DO_Open_N_UI = {}
local Robot_DO_Open_V_UI = {}
local Robot_DI_Done_N_UI = {}
local Robot_DI_Done_V_UI = {}

-- Populate lists from UI
for i = 0, doCount - 1 do
    Robot_DO_Close_N_UI[i] = closeDOList[i][0].value -- ControlClose_number
    Robot_DO_Close_V_UI[i] = closeDOList[i][1].value -- ControlClose_value
    Robot_DO_Open_N_UI[i] = openDOList[i][0].value -- ControlOpen_number
    Robot_DO_Open_V_UI[i] = openDOList[i][1].value -- ControlOpen_value

    -- Update if edited
    if ui_name == "ControlClose_number" .. i then
        Robot_DO_Close_N_UI[i] = UiElement.value
    elseif ui_name == "ControlClose_value" .. i then
        Robot_DO_Close_V_UI[i] = UiElement.value
    elseif ui_name == "ControlOpen_number" .. i then
        Robot_DO_Open_N_UI[i] = UiElement.value
    elseif ui_name == "ControlOpen_value" .. i then
        Robot_DO_Open_V_UI[i] = UiElement.value
    end

    -- Set visibility (always visible if in list)
    closeDOList[i][0]:SetVisible(true)
    closeDOList[i][1]:SetVisible(true)
    openDOList[i][0]:SetVisible(true)
    openDOList[i][1]:SetVisible(true)
    closeDOList[i][0]:RefreshUI()
    closeDOList[i][1]:RefreshUI()
    openDOList[i][0]:RefreshUI()
    openDOList[i][1]:RefreshUI()
end

for i = 0, diCount - 1 do
    Robot_DI_Done_N_UI[i] = feedbackDIList[i][0].value -- FeedbackFinish_number
    Robot_DI_Done_V_UI[i] = feedbackDIList[i][1].value -- FeedbackFinish_value

    if ui_name == "FeedbackFinish_number" .. i then
        Robot_DI_Done_N_UI[i] = UiElement.value
    elseif ui_name == "FeedbackFinish_value" .. i then
        Robot_DI_Done_V_UI[i] = UiElement.value
    end

    feedbackDIList[i][0]:SetVisible(true)
    feedbackDIList[i][1]:SetVisible(true)
    feedbackDIList[i][0]:RefreshUI()
    feedbackDIList[i][1]:RefreshUI()
end

-- Handle dropdown changes
if ui_name == "DoCountSelection" then
    Instance:GetUiElementByName("CloseGripperDOSelection"):SetListCount(UiElement.value)
    Instance:GetUiElementByName("OpenGripperDOSelection"):SetListCount(UiElement.value)
elseif ui_name == "DiCountSelection" then
    Instance:GetUiElementByName("FeedbackDISelection"):SetListCount(UiElement.value)
end

-- Calculate WaitValue and WaitMask
local WaitValue = 0
local WaitMask = 0
for i = 0, diCount - 1 do
    local doneNum = Robot_DI_Done_N_UI[i]
    local doneVal = Robot_DI_Done_V_UI[i]
    WaitValue = WaitValue + doneVal * (2 ^ doneNum)
    WaitMask = WaitMask + 1 * (2 ^ doneNum)
end

local Robot_DI_Done_Timeout_UI = Instance:GetUiElementByName("TimeoutValue").value
local Robot_DetectionDelay_UI = Instance:GetUiElementByName("DetectionDelay").value
local NotEqual_UI = Instance:GetUiElementByName("NotEqual").value

local WaitStart = 0
local WaitLength = 16

function WriteToPTableForRobotCodeGen()
    for i = 0, doCount - 1 do
        PTable:set_Item("Robot_DO_Close" .. i .. "_N_UI", Robot_DO_Close_N_UI[i])
        PTable:set_Item("Robot_DO_Close" .. i .. "_V_UI", Robot_DO_Close_V_UI[i])
        PTable:set_Item("Robot_DO_Open" .. i .. "_N_UI", Robot_DO_Open_N_UI[i])
        PTable:set_Item("Robot_DO_Open" .. i .. "_V_UI", Robot_DO_Open_V_UI[i])
    end

    for i = 0, diCount - 1 do
        PTable:set_Item("Robot_DI_Done" .. i .. "_N_UI", Robot_DI_Done_N_UI[i])
        PTable:set_Item("Robot_DI_Done" .. i .. "_V_UI", Robot_DI_Done_V_UI[i])
    end

    PTable:set_Item("Robot_DI_Done_Timeout_UI", Robot_DI_Done_Timeout_UI)
    PTable:set_Item("Robot_DetectionDelay_UI", Robot_DetectionDelay_UI)
    PTable:set_Item("NotEqual_UI", NotEqual_UI)
    PTable:set_Item("WaitValue", WaitValue)
    PTable:set_Item("WaitMask", WaitMask)
    PTable:set_Item("WaitStart", WaitStart)
    PTable:set_Item("WaitLength", WaitLength)
end

-- Build DOUT commands
local closeCommands = ""
local openCommands = ""
for i = 0, doCount - 1 do
    closeCommands = closeCommands .. string.format("DOUT(%d,%d);\n", Robot_DO_Close_N_UI[i], Robot_DO_Close_V_UI[i])
    openCommands = openCommands .. string.format("DOUT(%d,%d);\n", Robot_DO_Open_N_UI[i], Robot_DO_Open_V_UI[i])
end

local globalToolTcps = thisTool.GetSelectedToolTCPs()
for key, value in pairs(globalToolTcps) do
    thisTool.SetActionToActuateTool(value.TCPNumber, [[
        WaitSS();
        ]] .. closeCommands .. [[
        WAIT(]] .. Robot_DetectionDelay_UI .. [[);
        WDIN(]] .. WaitStart .. [[,]] .. WaitValue .. [[,L=]] .. WaitLength .. [[,MASK=]] .. WaitMask .. [[,T=]] .. Robot_DI_Done_Timeout_UI .. [[);
    ]])
    thisTool.SetActionToDeactuateTool(value.TCPNumber, [[
        WaitSS();
        ]] .. openCommands .. [[
        WAIT(]] .. Robot_DetectionDelay_UI .. [[);
        WDIN(]] .. WaitStart .. [[,]] .. WaitValue .. [[,L=]] .. WaitLength .. [[,MASK=]] .. WaitMask .. [[,T=]] .. Robot_DI_Done_Timeout_UI .. [[);
    ]])
end

-- Save UI element values to PTable
if UiElementType == "CheckBox" or
   UiElementType == "Text_Display" or
   UiElementType == "Text_Input" or
   UiElementType == "Float_Input" or
   UiElementType == "Int_Input" or
   UiElementType == "Digital_Output" or
   UiElementType == "Digital_Input" or
   UiElementType == "Dropdown" then
    PTable:set_Item(tag_name, UiElement.value)

elseif UiElementType == "Transform" or UiElementType == "Joint" then
    local current_values = {}
    for i = 1, 6 do
        current_values[i] = UiElement.value[i - 1]
    end
    local commaSeperatedValues = table.concat(current_values, ', ')
    PTable:set_Item(tag_name, commaSeperatedValues)

elseif UiElementType == "ProjectTool" then
    local current_values = {}
    for i = 1, 6 do
        current_values[i] = UiElement.value.transform[i - 1]
    end
    local commaSeperatedValues = table.concat(current_values, ', ')
    PTable:set_Item(tag_name .. '_transform', commaSeperatedValues)
    PTable:set_Item(tag_name .. '_toolName', UiElement.value.toolName)
    PTable:set_Item(tag_name .. '_tcpNumber', UiElement.value.tcpNumber)

elseif UiElementType == "List" then
    PTable:set_Item(tag_name, UiElement.value)
end

WriteToPTableForRobotCodeGen()