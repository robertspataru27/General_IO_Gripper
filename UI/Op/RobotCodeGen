local thisTool = CS.ToolManagerLuaInterface
local Instance = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance
local PTable = Instance.parameterTable

local Robot_DO_Close_N_UI = {}
local Robot_DO_Close_V_UI = {}
local Robot_DO_Open_N_UI = {}
local Robot_DO_Open_V_UI = {}
local Robot_DI_Done_N_UI = {}
local Robot_DI_Done_V_UI = {}

local lastDoCloseEnabled = 0
local lastDoOpenEnabled = 0
local WaitValue = 0
local WaitMask = 0
local NotEqualValue = 0
local NotEqualDinNumber = 0
local UniqueDinNumbers = {}

-- Get DO and DI counts
local doCount = PTable:get_Item("DoCount") or 3
local diCount = PTable:get_Item("DiCount") or 3

-- Populate lists from PTable
for i = 0, doCount - 1 do
    Robot_DO_Close_N_UI[i] = PTable:get_Item("Robot_DO_Close" .. i .. "_N_UI") or 0
    Robot_DO_Close_V_UI[i] = PTable:get_Item("Robot_DO_Close" .. i .. "_V_UI") or 1
    Robot_DO_Open_N_UI[i] = PTable:get_Item("Robot_DO_Open" .. i .. "_N_UI") or 0
    Robot_DO_Open_V_UI[i] = PTable:get_Item("Robot_DO_Open" .. i .. "_V_UI") or 1
    lastDoCloseEnabled = i
    lastDoOpenEnabled = i
end

for i = 0, diCount - 1 do
    Robot_DI_Done_N_UI[i] = PTable:get_Item("Robot_DI_Done" .. i .. "_N_UI") or 0
    Robot_DI_Done_V_UI[i] = PTable:get_Item("Robot_DI_Done" .. i .. "_V_UI") or 1
    local doneNum = Robot_DI_Done_N_UI[i]
    local doneVal = Robot_DI_Done_V_UI[i]
    if not UniqueDinNumbers[doneNum] then
        UniqueDinNumbers[doneNum] = true
        WaitMask = WaitMask + 1 * (2 ^ doneNum)
        WaitValue = WaitValue + doneVal * (2 ^ doneNum)
        NotEqualDinNumber = NotEqualDinNumber + 1
        NotEqualValue = NotEqualValue + (doneVal * (2 ^ i))
    end
end

local Robot_DI_Done_Timeout_UI = PTable:get_Item("Robot_DI_Done_Timeout_UI") or 2000
local NotEqual_UI = PTable:get_Item("NotEqual_UI") or false
local Robot_DetectionDelay_UI = PTable:get_Item("Robot_DetectionDelay_UI") or 100
local WaitStart = 0
local WaitLength = 16
local globalToolTcps = thisTool.GetSelectedToolTCPs()

-- Build DOUT commands
local closeCommands = ""
local openCommands = ""
local closeIfStatementCommands = ""
local openIfStatementCommands = ""
local whileStatementCommand = "GDIN(0, L=16)"

for i = 0, doCount - 1 do
    closeCommands = closeCommands .. string.format("DOUT(%d,%d);\n", Robot_DO_Close_N_UI[i], Robot_DO_Close_V_UI[i])
    openCommands = openCommands .. string.format("DOUT(%d,%d);\n", Robot_DO_Open_N_UI[i], Robot_DO_Open_V_UI[i])
    if i ~= lastDoCloseEnabled then
        closeIfStatementCommands = closeIfStatementCommands .. string.format("GDOUT(%d) != %d ||", Robot_DO_Close_N_UI[i], Robot_DO_Close_V_UI[i])
    else
        closeIfStatementCommands = closeIfStatementCommands .. string.format("GDOUT(%d) != %d", Robot_DO_Close_N_UI[i], Robot_DO_Close_V_UI[i])
    end
    if i ~= lastDoOpenEnabled then
        openIfStatementCommands = openIfStatementCommands .. string.format("GDOUT(%d) != %d ||", Robot_DO_Open_N_UI[i], Robot_DO_Open_V_UI[i])
    else
        openIfStatementCommands = openIfStatementCommands .. string.format("GDOUT(%d) != %d", Robot_DO_Open_N_UI[i], Robot_DO_Open_V_UI[i])
    end
end

-- Generate robot code
if NotEqual_UI == false then
    for key, value in pairs(globalToolTcps) do
        thisTool.SetActionToActuateTool(value.TCPNumber, [[
        WaitSS();
        if(]] .. closeIfStatementCommands .. [[) {
            ]] .. closeCommands .. [[
            WAIT(]] .. Robot_DetectionDelay_UI .. [[);
            WDIN(]] .. WaitStart .. [[,]] .. WaitValue .. [[,L=]] .. WaitLength .. [[,MASK=]] .. WaitMask .. [[,T=]] .. Robot_DI_Done_Timeout_UI .. [[);
        }
    ]])
        thisTool.SetActionToDeactuateTool(value.TCPNumber, [[
        WaitSS();
        if(]] .. openIfStatementCommands .. [[) {
            ]] .. openCommands .. [[
            WAIT(]] .. Robot_DetectionDelay_UI .. [[);
            WDIN(]] .. WaitStart .. [[,]] .. WaitValue .. [[,L=]] .. WaitLength .. [[,MASK=]] .. WaitMask .. [[,T=]] .. Robot_DI_Done_Timeout_UI .. [[);
        }
    ]])
    end
elseif NotEqualDinNumber ~= 1 then
    for key, value in pairs(globalToolTcps) do
        thisTool.SetActionToActuateTool(value.TCPNumber, [[
            WaitSS();
            if(]] .. closeIfStatementCommands .. [[) {
                ]] .. closeCommands .. [[
                WAIT(]] .. Robot_DetectionDelay_UI .. [[);
                toolTimeOut=100;
                while(]] .. whileStatementCommand .. [[ == ]] .. NotEqualValue .. [[ && toolTimeOut< ]] .. Robot_DI_Done_Timeout_UI .. [[){
                    WAIT(10);
                    toolTimeOut=toolTimeOut+10;
                }
                toolTimeOut=0;
            }
        ]])
        thisTool.SetActionToDeactuateTool(value.TCPNumber, [[
            WaitSS();
            if(]] .. openIfStatementCommands .. [[) {
                ]] .. openCommands .. [[
                WAIT(]] .. Robot_DetectionDelay_UI .. [[);
                toolTimeOut=100;
                while(]] .. whileStatementCommand .. [[ == ]] .. NotEqualValue .. [[ && toolTimeOut< ]] .. Robot_DI_Done_Timeout_UI .. [[){
                    WAIT(10);
                    toolTimeOut=toolTimeOut+10;
                }
                toolTimeOut=0;
            }
        ]])
    end
else
    for key, value in pairs(globalToolTcps) do
        thisTool.SetActionToActuateTool(value.TCPNumber, [[
            WaitSS();
            if(]] .. closeIfStatementCommands .. [[) {
                ]] .. closeCommands .. [[
                WAIT(]] .. Robot_DetectionDelay_UI .. [[);
                toolTimeOut=100;
                while(GDIN(]] .. Robot_DI_Done_N_UI[0] .. [[) == ]] .. NotEqualValue .. [[ && toolTimeOut< ]] .. Robot_DI_Done_Timeout_UI .. [[){
                    WAIT(10);
                    toolTimeOut=toolTimeOut+10;
                }
                toolTimeOut=0;
            }
        ]])
        thisTool.SetActionToDeactuateTool(value.TCPNumber, [[
            WaitSS();
            if(]] .. openIfStatementCommands .. [[) {
                ]] .. openCommands .. [[
                WAIT(]] .. Robot_DetectionDelay_UI .. [[);
                toolTimeOut=100;
                while(GDIN(]] .. Robot_DI_Done_N_UI[0] .. [[) == ]] .. NotEqualValue .. [[ && toolTimeOut< ]] .. Robot_DI_Done_Timeout_UI .. [[){
                    WAIT(10);
                    toolTimeOut=toolTimeOut+10;
                }
                toolTimeOut=0;
            }
        ]])
    end
end