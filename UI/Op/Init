-- Init
CS.UnityEngine.Debug.Log('ToolUI->Gripper Init triggered')

local PTable = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance.parameterTable
local Instance = CS.ConfigurationMenu.ConfigurationMenuLuaInterface.Instance

function WriteToPTableForRobotCodeGen()
    local WaitValue = 0
    local WaitMask = 0
    local WaitStart = 0
    local WaitLength = 16

    -- Get DO and DI counts from dropdowns
    local doCount = Instance:GetUiElementByName("DoCountSelection").value
	PTable:set_Item("DoCountSelection", doCount)
    local diCount = Instance:GetUiElementByName("DiCountSelection").value
	PTable:set_Item("DiCountSelection", diCount)

    -- Get list elements
    local closeDOList = Instance:GetUiElementByName("CloseGripperDOSelection").value
    local openDOList = Instance:GetUiElementByName("OpenGripperDOSelection").value
    local feedbackDIList = Instance:GetUiElementByName("FeedbackDISelection").value

    -- Store DOs for closing
    for i = 0, doCount - 1 do
        local closeNumElement = closeDOList[i][0] -- ControlClose_number
        local closeValElement = closeDOList[i][1] -- ControlClose_value
        local openNumElement = openDOList[i][0] -- ControlOpen_number
        local openValElement = openDOList[i][1] -- ControlOpen_value

        -- Store in PTable
        PTable:set_Item("Robot_DO_Close" .. i .. "_N_UI", closeNumElement.value)
        PTable:set_Item("Robot_DO_Close" .. i .. "_V_UI", closeValElement.value)
        PTable:set_Item("Robot_DO_Open" .. i .. "_N_UI", openNumElement.value)
        PTable:set_Item("Robot_DO_Open" .. i .. "_V_UI", openValElement.value)

        -- Visibility (always visible if in list, controlled by dropdown count)
        closeNumElement:SetVisible(true)
        closeValElement:SetVisible(true)
        openNumElement:SetVisible(true)
        openValElement:SetVisible(true)
        closeNumElement:RefreshUI()
        closeValElement:RefreshUI()
        openNumElement:RefreshUI()
        openValElement:RefreshUI()
    end

    -- Store DIs for feedback
    for i = 0, diCount - 1 do
        local diNumElement = feedbackDIList[i][0] -- FeedbackFinish_number
        local diValElement = feedbackDIList[i][1] -- FeedbackFinish_value

        PTable:set_Item("Robot_DI_Done" .. i .. "_N_UI", diNumElement.value)
        PTable:set_Item("Robot_DI_Done" .. i .. "_V_UI", diValElement.value)

        -- Visibility
        diNumElement:SetVisible(true)
        diValElement:SetVisible(true)
        diNumElement:RefreshUI()
        diValElement:RefreshUI()

        -- Calculate WaitValue and WaitMask
        local doneNum = diNumElement.value
        local doneVal = diValElement.value
        WaitValue = WaitValue + doneVal * (2 ^ doneNum)
        WaitMask = WaitMask + 1 * (2 ^ doneNum)
    end

    -- Store other parameters
    local Robot_DI_Done_Timeout_UI = Instance:GetUiElementByName("TimeoutValue").value
    local Robot_DetectionDelay_UI = Instance:GetUiElementByName("DetectionDelay").value
    local NotEqual_UI = Instance:GetUiElementByName("NotEqual").value

    PTable:set_Item("Robot_DI_Done_Timeout_UI", Robot_DI_Done_Timeout_UI)
    PTable:set_Item("Robot_DetectionDelay_UI", Robot_DetectionDelay_UI)
    PTable:set_Item("NotEqual_UI", NotEqual_UI)
    PTable:set_Item("WaitValue", WaitValue)
    PTable:set_Item("WaitMask", WaitMask)
    PTable:set_Item("WaitStart", WaitStart)
    PTable:set_Item("WaitLength", WaitLength)
end

local function ToJsonString(jsonStr)
    local index = string.find(jsonStr, ':[^:]*$')
    return string.sub(jsonStr, 1, index-1)
end

-- Verify PTable is setup
PTable:set_Item('Vender', 'Mantis Robotics Inc')
vendor = PTable:get_Item('Vender')
CS.UnityEngine.Debug.Log(vendor)

-- Load All Variables in PTable
for i, d in pairs(Instance.uiPageOnEdit.uiGroups) do
    for j, k in pairs(d.uiElements) do
        local UiElement = Instance:GetUiElementByName(k.name)
        local UiElementType = UiElement:GetType().Name
        local ui_name = UiElement.name or "Unknown"
        local tag_name = UiElementType .. '_' .. ui_name .. '_values'

        CS.UnityEngine.Debug.Log('Group Number: ' .. i ..
            '\nElement Number: ' .. j ..
            '\nUiElement Type: ' .. UiElementType ..
            '\nUiElement Name: ' .. ui_name ..
            '\nTag Name: ' .. tag_name)

        if UiElementType == 'CheckBox' or
           UiElementType == 'Text_Display' or
           UiElementType == 'Text_Input' or
           UiElementType == 'Int_Input' or
           UiElementType == 'Float_Input' or
           UiElementType == 'Dropdown' then
            if PTable:ContainsKey(tag_name) then
                UiElement.value = PTable:get_Item(tag_name)
            end

        elseif UiElementType == 'Transform' or UiElementType == 'Joint' then
            if PTable:ContainsKey(tag_name) then
                local load_values = PTable:get_Item(tag_name)
                local n = 0
                for value in load_values:gmatch('[^,%s]+') do
                    UiElement.value[n] = tonumber(value)
                    n = n + 1
                end
            end

        elseif UiElementType == 'ProjectTool' then
            if PTable:ContainsKey(tag_name .. '_transform') then
                local load_values = PTable:get_Item(tag_name .. '_transform')
                local n = 0
                for value in load_values:gmatch('[^,%s]+') do
                    UiElement.value.transform[n] = tonumber(value)
                    n = n + 1
                end
                if PTable:ContainsKey(tag_name .. '_toolName') then
                    UiElement.value.toolName = PTable:get_Item(tag_name .. '_toolName')
                end
                if PTable:ContainsKey(tag_name .. '_tcpNumber') then
                    UiElement.value.tcpNumber = PTable:get_Item(tag_name .. '_tcpNumber')
                end
            end

        elseif UiElementType == 'Digital_Input' or UiElementType == 'Digital_Output' then
            if PTable:ContainsKey(tag_name) then
                UiElement:SetValueWithJsonString(ToJsonString(tostring(PTable:get_Item(tag_name))))
            end

        elseif UiElementType == 'List' then
            if PTable:ContainsKey(tag_name) then
                local temp_values = PTable:get_Item(tag_name)
                if tostring(temp_values):sub(1,1) == "S" or tostring(temp_values):sub(1,1) == "n" then
                    UiElement.value = temp_values
                else
                    UiElement:SetValueWithJsonString(ToJsonString(tostring(temp_values)))
                end
            end

        elseif UiElementType == "SubMenuLink" then
            CS.UnityEngine.Debug.Log("Error Not Yet Implemented: " .. UiElementType)
        else
            CS.UnityEngine.Debug.Log("Unknown Type: " .. UiElementType)
            error("Unknown Type: " .. UiElementType)
        end
        UiElement:RefreshUI()
    end
end

WriteToPTableForRobotCodeGen()